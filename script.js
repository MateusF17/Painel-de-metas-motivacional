// script.js

// Espera o conte√∫do do DOM ser totalmente carregado para iniciar o script
document.addEventListener('DOMContentLoaded', () => {

    // --- SELETORES DO DOM ---
    const clockElement = document.getElementById('clock');
    const weekdayElement = document.getElementById('weekday');
    const fullDateElement = document.getElementById('full-date');
    const quoteElement = document.getElementById('quote-of-the-day');
    
    // Seletores para a funcionalidade de metas
    const goalInputElement = document.getElementById('goal-input');
    const goalDateElement = document.getElementById('goal-date');
    const saveGoalBtn = document.getElementById('save-goal-btn');
    const goalTextElement = document.getElementById('goal-text');
    const countdownElement = document.getElementById('countdown');

    // Seletores para o controle da m√∫sica
    const musicAudioElement = document.getElementById('background-music');
    const musicToggleBtn = document.getElementById('music-toggle-btn');
    
    // Novos seletores para o menu lateral e papel de parede
    const menuToggleBtn = document.getElementById('menu-toggle-btn');
    const sideMenu = document.getElementById('side-menu');
    const changeWallpaperBtn = document.getElementById('change-wallpaper-btn');
    const wallpaperInput = document.getElementById('wallpaper-input');
    
    // Vari√°vel para guardar o intervalo da contagem regressiva
    let countdownInterval;

    // --- FRASES MOTIVACIONAIS ---
    const motivationalQuotes = [ "Acredite em voc√™ mesmo e tudo ser√° poss√≠vel.", "O sucesso √© a soma de pequenos esfor√ßos repetidos dia ap√≥s dia.", "A persist√™ncia realiza o imposs√≠vel.", "O √∫nico lugar onde o sucesso vem antes do trabalho √© no dicion√°rio.", "N√£o espere por oportunidades, crie-as.", "Sua √∫nica limita√ß√£o √© voc√™ mesmo.", "Comece onde voc√™ est√°. Use o que voc√™ tem. Fa√ßa o que voc√™ pode.", "A jornada de mil milhas come√ßa com um √∫nico passo.", "Acredite que voc√™ pode, assim voc√™ j√° est√° no meio do caminho.", "O futuro pertence √†queles que acreditam na beleza de seus sonhos.", "Fa√ßa de cada dia sua obra-prima.", "Se voc√™ quer o arco-√≠ris, precisa aguentar a chuva.", "A melhor maneira de prever o futuro √© cri√°-lo.", "O otimismo √© a f√© em a√ß√£o. Nada se pode levar a efeito sem otimismo.", "Para ter sucesso, o seu desejo de sucesso deve ser maior do que o seu medo do fracasso.", "Transforme suas feridas em sabedoria.", "A vida √© 10% o que acontece com voc√™ e 90% como voc√™ reage a isso.", "O que n√£o te desafia, n√£o te transforma.", "A criatividade √© a intelig√™ncia se divertindo.", "A disciplina √© a ponte entre metas e realiza√ß√µes.", "Voc√™ nunca √© velho demais para definir outra meta ou sonhar um novo sonho.", "A maior gl√≥ria em viver n√£o est√° em nunca cair, mas em nos levantar cada vez que ca√≠mos.", "A coragem n√£o √© a aus√™ncia do medo, mas o triunfo sobre ele.", "√â durante nossas horas mais sombrias que devemos nos concentrar para ver a luz.", "Caia sete vezes, levante-se oito.", "Seja a mudan√ßa que voc√™ deseja ver no mundo.", "A dificuldade √© uma desculpa que a hist√≥ria nunca aceita.", "Definir um objetivo √© o ponto de partida de toda a realiza√ß√£o.", "O talento vence jogos, mas o trabalho em equipe e a intelig√™ncia vencem campeonatos.", "A felicidade n√£o √© algo pronto. Ela vem de suas pr√≥prias a√ß√µes.", "A excel√™ncia n√£o √© um ato, mas um h√°bito." ];

    // --- FUN√á√ïES ---

    function updateClock() {
        const now = new Date();
        const hours = String(now.getHours()).padStart(2, '0');
        const minutes = String(now.getMinutes()).padStart(2, '0');
        const seconds = String(now.getSeconds()).padStart(2, '0');
        clockElement.textContent = `${hours}:${minutes}:${seconds}`;
    }

    function setDateAndQuote() {
        const now = new Date();
        const dayOfMonth = now.getDate();
        const weekdays = ["Domingo", "Segunda-feira", "Ter√ßa-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "S√°bado"];
        const months = ["Janeiro", "Fevereiro", "Mar√ßo", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"];
        weekdayElement.textContent = weekdays[now.getDay()];
        fullDateElement.textContent = `${dayOfMonth} de ${months[now.getMonth()]} de ${now.getFullYear()}`;
        quoteElement.textContent = motivationalQuotes[dayOfMonth - 1];
    }

    function saveGoal() {
        const goalText = goalInputElement.value;
        const goalDate = goalDateElement.value;
        if (goalText && goalDate) {
            localStorage.setItem('userGoalText', goalText);
            localStorage.setItem('userGoalDate', goalDate);
            displayGoal();
        } else {
            alert('Por favor, preencha a meta e a data limite.');
        }
    }

    function displayGoal() {
        const savedGoalText = localStorage.getItem('userGoalText');
        const savedGoalDate = localStorage.getItem('userGoalDate');
        if (savedGoalText && savedGoalDate) {
            goalTextElement.textContent = savedGoalText;
            startCountdown(savedGoalDate);
        }
    }
    
    function startCountdown(targetDateString) {
        if (countdownInterval) clearInterval(countdownInterval);
        const targetDate = new Date(`${targetDateString}T23:59:59`);
        function updateCountdown() {
            const now = new Date();
            const difference = targetDate - now;
            if (difference <= 0) {
                countdownElement.textContent = "Prazo encerrado!";
                clearInterval(countdownInterval);
                return;
            }
            const days = Math.floor(difference / (1000 * 60 * 60 * 24));
            const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
            countdownElement.textContent = `Tempo Restante: ${days}d ${hours}h ${minutes}m`;
        }
        updateCountdown();
        countdownInterval = setInterval(updateCountdown, 1000);
    }

    function toggleMusic() {
        if (musicAudioElement.paused) {
            musicAudioElement.play();
            musicToggleBtn.innerHTML = 'Pausar M√∫sica üîá';
        } else {
            musicAudioElement.pause();
            musicToggleBtn.innerHTML = 'Tocar M√∫sica üéµ';
        }
    }

    // --- NOVAS FUN√á√ïES (MENU E PAPEL DE PAREDE) ---

    /**
     * Aplica um papel de parede salvo no localStorage.
     */
    function loadWallpaper() {
        const savedWallpaper = localStorage.getItem('wallpaper');
        if (savedWallpaper) {
            document.body.style.backgroundImage = `url(${savedWallpaper})`;
            document.body.style.backgroundSize = 'cover';
            document.body.style.backgroundPosition = 'center';
            document.body.style.backgroundRepeat = 'no-repeat';
        }
    }

    /**
     * Trata a sele√ß√£o de um novo arquivo de papel de parede.
     * @param {Event} event - O evento de mudan√ßa do input de arquivo.
     */
    function handleWallpaperChange(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = (e) => {
                const imageDataUrl = e.target.result;
                localStorage.setItem('wallpaper', imageDataUrl);
                loadWallpaper(); // Aplica a nova imagem
            };
            reader.readAsDataURL(file);
        }
    }

    // --- INICIALIZA√á√ÉO E EVENTOS ---

    // Eventos do menu
    menuToggleBtn.addEventListener('click', () => sideMenu.classList.toggle('open'));
    changeWallpaperBtn.addEventListener('click', () => wallpaperInput.click());
    wallpaperInput.addEventListener('change', handleWallpaperChange);

    // Eventos da aplica√ß√£o principal
    saveGoalBtn.addEventListener('click', saveGoal);
    musicToggleBtn.addEventListener('click', toggleMusic);
    
    // Carrega as configura√ß√µes salvas e inicia as fun√ß√µes
    loadWallpaper();
    setDateAndQuote();
    updateClock();
    setInterval(updateClock, 1000);
    displayGoal();
});
